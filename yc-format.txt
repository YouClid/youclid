                        .yc File Format Specifications

Drew Monroe, Sailesh Simhadri, Joseph Sweeney, Soumya Kundu, Ian Dechene
University of Connecticut

Introduction

    This document outlines the specifications for writing files in the .yc file
    format. Currently, this file format can be parsed by our python parser to
    generate HTML pages.

Status of this Document

    This document is currently a draft and is subject to change without notice.

Definitions

1.  The terms "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
    "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to
    be interpreted as described in RFC 2119.
2.  The "[" and "]" characters will be referred to in this document as the
    BRACKET characters. The "[" character will be referred to as the
    OPEN BRACKET character, and the "]" character will be referred to as the
    CLOSED BRACKET character. When talking about both characters, the term
    BRACKETS will be used.
3.  The "\" character will be referred to in this document as the BACKSLASH
    character.

Specifications

1.  All text that is desired to be parsed MUST be enclosed by BRACKETS. The
    first character MUST be the OPEN BRACKET character, and the last character
    MUST be the CLOSED BRACKET character.
2.  Text that is not enclosed by BRACKETS will be treated as normal text.
3.  In the event that a BRACKET is to be interpreted literally in the text, it
    MUST be escaped by a BACKSLASH character.
4.  Words inside BRACKETS MUST be separated by a single space.
5.  The first word inside BRACKETS MUST represent the type of the object to be
    drawn and MUST be one of the following:
        - line
        - circle
        - center
        - point
        - triangle
        - loc
        - step
        - clear
6.  The second word inside BRACKETS MUST represent the name of the object and
    SHALL be the name of the points that define that object, each represented
    by a single character.
7.  For the "circle" keyword, the third word inside BRACKETS MUST be
    "circle=ABC" where ABC MUST be the name of a circle object.
8.  For the "loc" keyword, the third word inside BRACKETS MUST be a floating
    point number that represents the x coordinate of the point between -1.0 and
    1.0 inclusive.
9.  For the "loc" keyword, the forth word inside BRACKETS MUST be a floating
    point number that represents the y coordinate of the point between -1.0 and
    1.0 inclusive.
10. For each point specified, either explicitly by the "point" keyword, or
    implicitly by using a "line", "circle", "center", or "triangle" keyword,
    there MUST be a corresponding "loc" keyword to provide coordinates for
    that point.
11. It is RECOMMENDED that text be marked up and is RECOMMENDED that the object
    not be added to the text. For example, if the text was "Let line AB be a
    given finite straight line", the markup should be "Let [line AB] be a given
    finite straight line" and not "Let line [line AB] be a given finite
    straight line", as the later will result in the word "line" being
    displayed twice.
12. The user MAY specify steps in the markup, which will represent groups of
    elements to be displayed together in the frontend. This allows the user to
    create animated steps in the frontend construction. All elements created
    between two `step` commands will be displayed together, as will all
    elements between the start of the file and the first `step` command, as
    well as all elements between the final step command and the end of the
    file.
13. The user MAY use the "clear" keyword as a way to remove all visualization
    from the screen.
